# -*- coding: utf-8 -*-
"""class on dictionaries(13/06/2025)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tgi8o63rqMQBCnMVqZbiUgnm3KAENgjg
"""

dic={1:"Hello",2:"hi",3:"how",4:"what"}
print(dic[1])
dic[10]="Where"
'''print(dic)
print(list(dic.keys()))
print(list(dic.values()))'''

for key,value in dic.items():
  print(key,value)

'''string1 = "Hello#$$$ Hii^&&& How#$@@ There677*&&**"
#{"Hello#$$$":"Hello","Hii^&&&":"Hii"}'''

st=input("Enter all the words with special characters:")
l=st.split()
d={}

for i in l:
  st2=''
  for j in i:
    if j.isalpha()==True:
      st2+=j
  d[i]=st2
print(d)

'''Q10. Invert Dictionary with Duplicate Values
Task:
Given a dictionary with duplicate values, invert it to a dictionary where values become keys and values are lists of original keys.
Input:
{"a": 1, "b": 2, "c": 1, "d": 2, "e": 3}
Output:
{1: ['a', 'c'], 2: ['b', 'd'], 3: ['e']}'''


s={"a": 1, "b": 2, "c": 1, "d": 2, "e": 3}
final={}
num=[]
for key,value in s.items():
  if value not in num:
    num.append(value)
    l=[key]
    final[value]=l
  else:
    s=final[value]
    s.append(key)
    final[value]=s
print(final)

'''Character Frequency in Nested Dictionary
Task:
From a paragraph, count the frequency of each character and return a nested dictionary with vowels and consonants.
Input:
"Hello World"
Output:
{'vowels': {'e': 1, 'o': 2}, 'consonants': {'h': 1, 'l': 3, 'w': 1, 'r': 1, 'd': 1}}'''

vowels='aeiouAEIOU'
st=input("Enter string:")
c={}
v={}
final={}
for i in st:
  if i in vowels:
    if i not in v:
      v[i]=1
    else:
      v[i]+=1
  else:
    if i not in c:
      c[i]=1
    else:
      c[i]+=1
final['vowels']=v
final['consonants']=c
print(final)

